[
  
  {
    "title": "Mac 터미널 설정",
    "url": "/dangtong-tech/posts/MAC-%ED%84%B0%EB%AF%B8%EB%84%90-%EC%84%A4%EC%A0%95/",
    "categories": "",
    "tags": "",
    "date": "2022-09-18 00:00:00 +0900",
    





    "snippet": "ITerm 세팅# Xcode 설치xcode-select —-install# Brew 설치/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"# Iterm 설치brew install iterm2# Zsh 설치brew install zsh# OhMyZsh 설치sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"  Powerline Fonts 설치          사이트 : https://github.com/powerline/fonts      Code → Download ZIP 클릭      압축해지후 해당 폴더에서 install.sh 수행하면 폰트 설치됨        zshrc 파일안에 아래와 같이 설정# 설정vi ~/.zshrc# 파일 내용plugins=(  git  bundler  dotenv  osx  kubectl)ZSH_THEME=\"agnoster\"  Plugin 종류 : https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins  Iterm2 → Preference → Profile → Text → font 에서 powerline 으로 검색 해서 폰트 지정          폰트 : Meslo LG S DZ for Powerline, Regular      Color 테마 : Solarized Dark        한글 깨짐          Iterm → Preference → Profile → Text 에서 unicode normalization form 을 NFC 로 변경하면 해결됨        프롬프트 꾸미기 및 멀티 라인 적용 (.zshrc 에 아래 내용 추가)"
  },
  
  {
    "title": "kind를 이용한 쿠버네티스 클러스터 생성하기",
    "url": "/dangtong-tech/posts/kind/",
    "categories": "Blogging, Tutorial",
    "tags": "kubernetes, k8s",
    "date": "2012-09-22 21:55:00 +0900",
    





    "snippet": "1. What is Kind?Kind 는 로컬 컴퓨터 환경에 쿠버네티스 클러스터를 손쉽고 빠르게 설치 하기 위해  만들어진 도구 입니다.Kind는 Go 언어를 기반으로 만들어 졌으며, Docker 이미지를 기반으로 kubeadm을 이용하여 클러스터를 배포 합니다.kind 공식 홈페이지 : kind.sigs.k8s.io2. Kind 설치 하기설치 가이드 원본 URL : https://kind.sigs.k8s.io/docs/user/quick-start/#installationMacOSbrew install kindWindowschoco install kindLinuxcurl.exe -Lo kind-windows-amd64.exe https://kind.sigs.k8s.io/dl/v0.15.0/kind-windows-amd64Move-Item .\\kind-windows-amd64.exe c:\\some-dir-in-your-PATH\\kind.exe3. Kind 로 클러스터 생성 (초간단)클러스터 생성kind create cluster # Default cluster context 이름은 'kind' 로 생성kind create cluster --name dangtong # cluster context 이름을 'dangtong' 으로 지정클러스터 생성 확인kind get clusterskubectl cluster-info --context dangtong클러스터 삭제kind delete cluster4. 설정 파일을 이용한 Kind 클러스터 생성클러스터 생성설정 파일을 이용한 클러스터 생성설정파일을 이용해서 kind 클러스터를 생성할 수 있습니다.kind create cluster --config kind-example-config.yaml3개 노드 클러스터 생성3개 노드(1 controller, 2worker) 클러스터 설정# three node (two workers) cluster configkind: ClusterapiVersion: kind.x-k8s.io/v1alpha4nodes:- role: control-plane- role: worker- role: worker6개 노드 클러스터 생성kind: ClusterapiVersion: kind.x-k8s.io/v1alpha4nodes:- role: control-plane- role: control-plane- role: control-plane- role: worker- role: worker- role: worker쿠버네티스 버전 설정쿠버네티스 버전에 따른 이미지는 링크에서 확인 가능 : https://github.com/kubernetes-sigs/kind/releaseskind: ClusterapiVersion: kind.x-k8s.io/v1alpha4nodes:- role: control-plane  image: kindest/node:v1.16.4@sha256:b91a2c2317a000f3a783489dfb755064177dbc3a0b2f4147d50f04825d016f55- role: worker  image: kindest/node:v1.16.4@sha256:b91a2c2317a000f3a783489dfb755064177dbc3a0b2f4147d50f04825d016f55네트워크 설정  Pod Subnet 설정kind: ClusterapiVersion: kind.x-k8s.io/v1alpha4networking:  podSubnet: \"10.244.0.0/16\"  Service Subnet 설정kind: ClusterapiVersion: kind.x-k8s.io/v1alpha4networking:  serviceSubnet: \"10.96.0.0/12\"  Default CNI 설정Caliaco 완 같은 3rd party CNI 사용을 위해서는 default CNI 설치를 하지 말아야 합니다.kind: ClusterapiVersion: kind.x-k8s.io/v1alpha4networking:  # default CNI가 설치 되지 않습니다.  disableDefaultCNI: true  kube-proxy 모드 설정iptables 또는 IPVS 중에 선택해서 사용 가능. default 는 iptableskind: ClusterapiVersion: kind.x-k8s.io/v1alpha4networking:  kubeProxyMode: \"ipvs\"클러스터 생성 예제kind: ClusterapiVersion: kind.x-k8s.io/v1alpha4nodes:- role: control-plane  image: kindest/node:v1.22.13@sha256:4904eda4d6e64b402169797805b8ec01f50133960ad6c19af45173a27eadf959  kubeadmConfigPatches:  - |    kind: InitConfiguration    nodeRegistration:      kubeletExtraArgs:        node-labels: \"ingress-ready=true\"  extraPortMappings:  - containerPort: 80    hostPort: 80    protocol: TCP  - containerPort: 443    hostPort: 443    protocol: TCP- role: worker  image: kindest/node:v1.22.13@sha256:4904eda4d6e64b402169797805b8ec01f50133960ad6c19af45173a27eadf959- role: worker  image: kindest/node:v1.22.13@sha256:4904eda4d6e64b402169797805b8ec01f50133960ad6c19af45173a27eadf959networking:  serviceSubnet: \"10.120.0.0/16\"5. Ingress 및 LoadBalancer 설정Ingress 및 Loadbalancer 를 설정하기 위해서는 KIND 를 이용한 클러스터 생성시  extraPortMapping 설정을 하고, kubeadm툴을 통해 custom node label 을 노드에 설정해야 합니다.Ingress 가능한 클러스터 생성kind 클러스터를 extraPortMappings 및 node-lables 설정과 함께 생성 합니다.  ExtreaPortMappings : 로컬 호스트가 80 및 443 포트를 통해 Ingress Controller로 요청이 가능하게 설정합니다.  node–labels : Ingress Controller 가 특정 라벨을 가진 노드에서만 수행 되도록 합니다.cat &lt;&lt;EOF | kind create cluster --config=-kind: ClusterapiVersion: kind.x-k8s.io/v1alpha4nodes:- role: control-plane  kubeadmConfigPatches:  - |    kind: InitConfiguration    nodeRegistration:      kubeletExtraArgs:        node-labels: \"ingress-ready=true\"  extraPortMappings:  - containerPort: 80    hostPort: 80    protocol: TCP  - containerPort: 443    hostPort: 443    protocol: TCPEOFCountour Ingress 생성  Contour 설치kubectl apply -f https://projectcontour.io/quickstart/contour.yaml  Contour 설정 업데이트kubectl patch daemonsets -n projectcontour envoy -p '{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"ingress-ready\":\"true\"},\"tolerations\":[{\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Equal\",\"effect\":\"NoSchedule\"},{\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"effect\":\"NoSchedule\"}]}}}}'Kong Ingress 생성  Kong 설치kubectl apply -f https://raw.githubusercontent.com/Kong/kubernetes-ingress-controller/master/deploy/single/all-in-one-dbless.yaml  Kong 설정 업데이트kubectl patch deployment -n kong ingress-kong -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"proxy\",\"ports\":[{\"containerPort\":8000,\"hostPort\":80,\"name\":\"proxy\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"hostPort\":443,\"name\":\"proxy-ssl\",\"protocol\":\"TCP\"}]}],\"nodeSelector\":{\"ingress-ready\":\"true\"},\"tolerations\":[{\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Equal\",\"effect\":\"NoSchedule\"},{\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"effect\":\"NoSchedule\"}]}}}}'Nginx Ingress 생성  Nginx 설치kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml  Nginx 설정 업데이트kubectl wait --namespace ingress-nginx \\  --for=condition=ready pod \\  --selector=app.kubernetes.io/component=controller \\  --timeout=90sIngress 사용 예제kind: PodapiVersion: v1metadata:  name: foo-app  labels:    app: foospec:  containers:  - name: foo-app    image: hashicorp/http-echo:0.2.3    args:    - \"-text=foo\"---kind: ServiceapiVersion: v1metadata:  name: foo-servicespec:  selector:    app: foo  ports:  # Default port used by the image  - port: 5678---kind: PodapiVersion: v1metadata:  name: bar-app  labels:    app: barspec:  containers:  - name: bar-app    image: hashicorp/http-echo:0.2.3    args:    - \"-text=bar\"---kind: ServiceapiVersion: v1metadata:  name: bar-servicespec:  selector:    app: bar  ports:  # Default port used by the image  - port: 5678---apiVersion: networking.k8s.io/v1kind: Ingressmetadata:  name: example-ingressspec:  rules:  - http:      paths:      - pathType: Prefix        path: \"/foo\"        backend:          service:            name: foo-service            port:              number: 5678      - pathType: Prefix        path: \"/bar\"        backend:          service:            name: bar-service            port:              number: 5678---"
  }
  
]

